mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), 0, round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), 0,  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), 0, round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), 0, round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))), 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI_County = SVI %>%
rowwise() %>%
group_by(YEAR, STCNTY, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU),
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
CEP_GROUPQ = CE_GROUPQ / CE_TOTPOP,
CEP_AGE17  = CE_AGE17 / CE_TOTPOP,
CEP_AGE65  = CE_AGE65 / CE_TOTPOP,
CEP_DISABL = CE_DISABL / CE_NOINST,
CEP_SNGPNT = CE_SNGPNT / CE_HH,
CEP_MINRTY = CE_MINRTY / CE_TOTPOP,
CEP_LIMENG = ifelse(is.na(CE_LIMENG / CE_AGE5), 0, CE_LIMENG / CE_AGE5)
)
SVI_County
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_POV    = percent_rank(CEP_POV),
CEPL_UNEMP  = percent_rank(CEP_UNEMP),
CEPL_PCI    = percent_rank(CEP_PCI),
CEPL_NOHSDP = percent_rank(CEP_NOHSDP),
CSPL_THEME1 = percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP),
CRPL_THEME1 = percent_rank(percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP)),
CEPL_AGE65  = percent_rank(CEP_AGE65),
CEPL_AGE17  = percent_rank(CEP_AGE17),
CEPL_DISABL = percent_rank(CEP_DISABL),
CEPL_SNGPNT = percent_rank(CEP_SNGPNT),
CSPL_THEME2 = percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT),
CRPL_THEME2 = percent_rank(percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT)),
CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County = SVI_County %>%
mutate(CSPL_THEMES = CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4,
CRPL_THEMES = percent_rank(CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4))
SVI_County
lookup = SVI_County %>%
select(STCNTY,
STATE,
COUNTY)
filename = "FIPSCountyXWalk.csv"
write.csv(lookup, paste(path,filename,sep=""))
filename = "SVI_County.csv"
write.csv(SVI_County, paste(path,filename,sep=""))
final %>%
filter(type = "total_vaccines")
final %>%
filter(type == "total_vaccines")
final %>%
filter(type == "total_vaccines",
date > "2020-07-01")
covid_vaccine_tall = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\vaccine_data_by_county.csv")
covid_vaccine_tall$date = mdy(covid_vaccine_tall$Date)
covid_vaccine_tall$countyFIPS = covid_vaccine_tall$FIPS
covid_vaccine_tall = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\vaccine_data_by_county.csv")
covid_vaccine_tall$date = mdy(covid_vaccine_tall$Date)
covid_vaccine_tall$countyFIPS = covid_vaccine_tall$FIPS
covid_vaccine_tall$total_vaccines = covid_vaccine_tall$Administered_Dose1_Recip
new_tall = covid_infection_tall %>%
filter(countyFIPS != 0) %>%
inner_join(covid_vaccine_tall, by = c("countyFIPS", "date"), suffix = c(".inf", ".vac")) %>%
inner_join(covid_deaths_tall, by = c("countyFIPS", "date"), suffix = c(".vac", ".det"))
covid_vaccine_tall = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\vaccine_data_by_county.csv")
covid_vaccine_tall$date = mdy(covid_vaccine_tall$Date)
covid_vaccine_tall$countyFIPS = as.numeric(covid_vaccine_tall$FIPS)
covid_vaccine_tall$total_vaccines = covid_vaccine_tall$Administered_Dose1_Recip
covid_vaccine_tall$FIPS
new_tall = covid_infection_tall %>%
filter(countyFIPS != 0) %>%
inner_join(covid_vaccine_tall, by = c("countyFIPS", "date"), suffix = c(".inf", ".vac")) %>%
inner_join(covid_deaths_tall, by = c("countyFIPS", "date"), suffix = c(".vac", ".det"))
final = new_tall %>%
select(countyFIPS,
date,
total_infection,
total_vaccines,
deaths) %>%
gather(type, value, total_infection:deaths)
final %>%
filter(type == "total_vaccines",
date > "2020-07-01")
?percent_rank
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
path = "C:/Users/taywo/Documents/Git Repos/CDC2021/datasets/Social Science/"
years = c(2014, 2016, 2018)
filenames = c("xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv",
"SVI2016_US.csv",
"SVI2018_US.csv")
#E_DISABL is missing from 2010, and some columns have different names
columns_2010 = c("YEAR", "STATE_NAME", "COUNTY", "CENSUSAREA", "E_TOTPOP",
"E_HU", "HH", "E_POV", "E_UNEMP", "E_PCI", "E_NOHSDIP", "AGE65",
"AGE17", "SNGPRNT", "MINORITY", "E_LIMENG", "E_MUNIT",
"E_MOBILE", "E_CROWD", "E_NOVEH", "GROUPQ")
columns = c("YEAR", "STATE", "COUNTY", "STCNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
# for (i in 1:length(years)){
#   year = years[i]
#   filename = filenames[i]
#   SVI_new = read.csv(paste(path,filename,sep=""))
#   SVI_new$YEAR = year
#   if (i == 1){
#     SVI = SVI_new[columns]
#   } else {
#     SVI = rbind(SVI, SVI_new[columns])
#   }
# }
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI_new$YEAR = 2014
SVI = SVI_new[columns]
SVI
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
SVI$E_POV[which(SVI$E_POV == -999)] = NA
SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), 0, round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), 0,  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), 0, round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), 0, round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))), 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI_County = SVI %>%
rowwise() %>%
group_by(YEAR, STCNTY, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU),
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
CEP_GROUPQ = CE_GROUPQ / CE_TOTPOP,
CEP_AGE17  = CE_AGE17 / CE_TOTPOP,
CEP_AGE65  = CE_AGE65 / CE_TOTPOP,
CEP_DISABL = CE_DISABL / CE_NOINST,
CEP_SNGPNT = CE_SNGPNT / CE_HH,
CEP_MINRTY = CE_MINRTY / CE_TOTPOP,
CEP_LIMENG = ifelse(is.na(CE_LIMENG / CE_AGE5), 0, CE_LIMENG / CE_AGE5)
)
SVI_County
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_POV    = percent_rank(CEP_POV),
CEPL_UNEMP  = percent_rank(CEP_UNEMP),
CEPL_PCI    = 1-percent_rank(CEP_PCI),
CEPL_NOHSDP = percent_rank(CEP_NOHSDP),
CSPL_THEME1 = percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP),
CRPL_THEME1 = percent_rank(percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP)),
CEPL_AGE65  = percent_rank(CEP_AGE65),
CEPL_AGE17  = percent_rank(CEP_AGE17),
CEPL_DISABL = percent_rank(CEP_DISABL),
CEPL_SNGPNT = percent_rank(CEP_SNGPNT),
CSPL_THEME2 = percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT),
CRPL_THEME2 = percent_rank(percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT)),
CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County = SVI_County %>%
mutate(CSPL_THEMES = CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4,
CRPL_THEMES = percent_rank(CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4))
SVI_County
filename = "SVI_County.csv"
write.csv(SVI_County, paste(path,filename,sep=""))
path = "../datasets/Social Science/"
columns = c("YEAR", "STATE", "COUNTY", "STCNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI_new$YEAR = 2014
SVI = SVI_new[columns]
SVI
path = "../datasets/Social Science/"
columns = c("YEAR", "STATE", "COUNTY", "STCNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI = SVI_new[columns]
path = "../datasets/Social Science/"
columns = c("STATE", "COUNTY", "STCNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI = SVI_new[columns]
SVI
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
SVI$E_POV[which(SVI$E_POV == -999)] = NA
SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
for (colname in colnames(SVI)){
SVI[which(SVI[colname] == -999), colname] = NA
}
# SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
# SVI$E_POV[which(SVI$E_POV == -999)] = NA
# SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
for (colname in colnames(SVI)){
SVI[which(SVI[colname] == -999), colname] = NA
}
# SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
# SVI$E_POV[which(SVI$E_POV == -999)] = NA
# SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
path = "../datasets/Social Science/"
columns = c("STATE", "COUNTY", "STCNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI = SVI_new[columns]
SVI
SVI[which(SVI[colname] == -999), colname]
colname = "E_PCI"
SVI[which(SVI[colname] == -999), colname]
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
for (colname in colnames(SVI)){
SVI[which(SVI[colname] == -999), colname] = NA
}
# SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
# SVI$E_POV[which(SVI$E_POV == -999)] = NA
# SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
1-0.772
1-0.065
mean((SVI_new$E_DISABL)/(SVI_new$EP_DISABL/100), na.rm = TRUE)
mean(((SVI_new$E_DISABL)/(SVI_new$EP_DISABL/100))/E_TOTPOP, na.rm = TRUE)
mean(((SVI_new$E_DISABL)/(SVI_new$EP_DISABL/100))/SVI_new$E_TOTPOP, na.rm = TRUE)
mean(((SVI_new$E_CROWD)/(SVI_new$EP_CROWD/100))/SVI_new$E_HU, na.rm = TRUE)
mean(((SVI_new$E_CROWD)/(SVI_new$EP_CROWD/100)), na.rm = TRUE)
mean(((SVI_new$E_CROWD)/(SVI_new$EP_CROWD/100))/SVI_new$E_HU, na.rm = TRUE)
min(((SVI_new$E_CROWD)/(SVI_new$EP_CROWD/100))/SVI_new$E_HU, na.rm = TRUE)
max(((SVI_new$E_CROWD)/(SVI_new$EP_CROWD/100))/SVI_new$E_HU, na.rm = TRUE)
# AGE variables use 2010 statistics found here: https://www.census.gov/prod/cen2010/briefs/c2010br-03.pdf
# Others use national average from provided dataset
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), round(0.66 * E_TOTPOP), round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), round(0.788 * E_TOTPOP),  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), round(0.935 * E_TOTPOP), round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), round(0.985 * E_TOTPOP), round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))), 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI$E_OCCHU
max(SVI$E_OCCHU)
which.max(SVI$E_OCCHU)
SVI[which.max(SVI$E_OCCHU),]
1/0
2/0
SVI[which.max(SVI$E_OCCHU[-3774])]
SVI[which.max(SVI$E_OCCHU)]
SVI[which.max(SVI$E_OCCHU[-3774,])]
SVI[which.max(SVI$E_OCCHU[-3774])]
SVI[which.max(SVI$E_OCCHU[-3774]),]
mean(((SVI_new$E_CROWD[-3774])/(SVI_new$EP_CROWD[-3774/100))/SVI_new$E_HU[-3774], na.rm = TRUE)
mean(((SVI_new$E_CROWD[-3774])/(SVI_new$EP_CROWD[-3774]/100))/SVI_new$E_HU[-3774], na.rm = TRUE)
mean(SVI$E_OCCHU[-3774])
min(SVI$E_OCCHU[-3774])
max(SVI$E_OCCHU[-3774])
# AGE variables use 2010 statistics found here: https://www.census.gov/prod/cen2010/briefs/c2010br-03.pdf
# Others use national average from provided dataset
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), round(0.66 * E_TOTPOP), round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), round(0.788 * E_TOTPOP),  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), round(0.935 * E_TOTPOP), round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), round(0.985 * E_TOTPOP), round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))) | EP_CROWD == 0, 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
mean(SVI$E_OCCHU[-3774])
mean(SVI$E_OCCHU[-3774] / SVI$E_HU[-3774])
mean(SVI$E_OCCHU[-3774] / SVI$E_HU[-3774], na.rm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
path = "../datasets/Social Science/"
columns = c("STATE", "COUNTY", "STCNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_raw = read.csv(paste(path,filename,sep=""))
SVI = SVI_raw[columns]
SVI
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
for (colname in colnames(SVI)){
SVI[which(SVI[colname] == -999), colname] = NA
}
# SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
# SVI$E_POV[which(SVI$E_POV == -999)] = NA
# SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
# AGE variables use 2010 statistics found here: https://www.census.gov/prod/cen2010/briefs/c2010br-03.pdf
# Others use national average from provided data set
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), round(0.66 * E_TOTPOP), round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), round(0.788 * E_TOTPOP),  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), round(0.935 * E_TOTPOP), round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), round(0.985 * E_TOTPOP), round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))) | EP_CROWD == 0, round(0.709 * E_HU), round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI_County = SVI %>%
rowwise() %>%
group_by(YEAR, STCNTY, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County = SVI %>%
rowwise() %>%
group_by(STCNTY, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU),
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
CEP_GROUPQ = CE_GROUPQ / CE_TOTPOP,
CEP_AGE17  = CE_AGE17 / CE_TOTPOP,
CEP_AGE65  = CE_AGE65 / CE_TOTPOP,
CEP_DISABL = CE_DISABL / CE_NOINST,
CEP_SNGPNT = CE_SNGPNT / CE_HH,
CEP_MINRTY = CE_MINRTY / CE_TOTPOP,
CEP_LIMENG = ifelse(is.na(CE_LIMENG / CE_AGE5), 0, CE_LIMENG / CE_AGE5)
)
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_POV    = percent_rank(CEP_POV),
CEPL_UNEMP  = percent_rank(CEP_UNEMP),
CEPL_PCI    = 1-percent_rank(CEP_PCI),
CEPL_NOHSDP = percent_rank(CEP_NOHSDP),
CSPL_THEME1 = percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP),
CRPL_THEME1 = percent_rank(percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP)),
CEPL_AGE65  = percent_rank(CEP_AGE65),
CEPL_AGE17  = percent_rank(CEP_AGE17),
CEPL_DISABL = percent_rank(CEP_DISABL),
CEPL_SNGPNT = percent_rank(CEP_SNGPNT),
CSPL_THEME2 = percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT),
CRPL_THEME2 = percent_rank(percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT)),
CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County = SVI_County %>%
mutate(CSPL_THEMES = CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4,
CRPL_THEMES = percent_rank(CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4))
SVI_County
filename = "SVI_County.csv"
write.csv(SVI_County, paste(path,filename,sep=""))
filename = "SVI_County.csv"
write.csv(SVI_County, paste(path,filename,sep=""))
SVI_County
filename = "SVI_County.csv"
write.csv(SVI_County, paste(path,filename,sep=""))
library(tidyverse)
library(lubridate)
covid_deaths = read.csv("../datasets/Social Science/covid_deaths_usafacts.csv")
