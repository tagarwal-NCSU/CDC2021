CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
path = "C:/Users/taywo/Documents/Git Repos/CDC2021/datasets/Social Science/"
years = c(2014, 2016, 2018)
filenames = c("xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv",
"SVI2016_US.csv",
"SVI2018_US.csv")
#E_DISABL is missing from 2010, and some columns have different names
columns_2010 = c("YEAR", "STATE_NAME", "COUNTY", "CENSUSAREA", "E_TOTPOP",
"E_HU", "HH", "E_POV", "E_UNEMP", "E_PCI", "E_NOHSDIP", "AGE65",
"AGE17", "SNGPRNT", "MINORITY", "E_LIMENG", "E_MUNIT",
"E_MOBILE", "E_CROWD", "E_NOVEH", "GROUPQ")
columns = c("YEAR", "STATE", "COUNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
for (i in 1:length(years)){
year = years[i]
filename = filenames[i]
SVI_new = read.csv(paste(path,filename,sep=""))
SVI_new$YEAR = year
if (i == 1){
SVI = SVI_new[columns]
} else {
SVI = rbind(SVI, SVI_new[columns])
}
}
SVI
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
SVI$E_POV[which(SVI$E_POV == -999)] = NA
SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
SVI[which(SVI$COUNTY == "MARICOPA" & SVI$E_LIMENG == 0),]
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), 0, round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), 0,  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), 0, round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), 0, round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))), 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI_County = SVI %>%
rowwise() %>%
group_by(YEAR, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU)
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU),
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
CEP_GROUPQ = CE_GROUPQ / CE_TOTPOP,
CEP_AGE17  = CE_AGE17 / CE_TOTPOP,
CEP_AGE65  = CE_AGE65 / CE_TOTPOP,
CEP_DISABL = CE_DISABL / CE_NOINST,
CEP_SNGPNT = CE_SNGPNT / CE_HH,
CEP_MINRTY = CE_MINRTY / CE_TOTPOP,
CEP_LIMENG = ifelse(is.na(CE_LIMENG / CE_AGE5), 0, CE_LIMENG / CE_AGE5)
)
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
path = "C:/Users/taywo/Documents/Git Repos/CDC2021/datasets/Social Science/"
years = c(2014, 2016, 2018)
filenames = c("xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv",
"SVI2016_US.csv",
"SVI2018_US.csv")
#E_DISABL is missing from 2010, and some columns have different names
columns_2010 = c("YEAR", "STATE_NAME", "COUNTY", "CENSUSAREA", "E_TOTPOP",
"E_HU", "HH", "E_POV", "E_UNEMP", "E_PCI", "E_NOHSDIP", "AGE65",
"AGE17", "SNGPRNT", "MINORITY", "E_LIMENG", "E_MUNIT",
"E_MOBILE", "E_CROWD", "E_NOVEH", "GROUPQ")
columns = c("YEAR", "STATE", "COUNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
# for (i in 1:length(years)){
#   year = years[i]
#   filename = filenames[i]
#   SVI_new = read.csv(paste(path,filename,sep=""))
#   SVI_new$YEAR = year
#   if (i == 1){
#     SVI = SVI_new[columns]
#   } else {
#     SVI = rbind(SVI, SVI_new[columns])
#   }
# }
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI_new$YEAR = 2014
SVI = SVI_new[columns]
SVI
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
SVI$E_POV[which(SVI$E_POV == -999)] = NA
SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
SVI[which(SVI$COUNTY == "MARICOPA" & SVI$E_LIMENG == 0),]
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), 0, round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), 0,  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), 0, round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), 0, round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))), 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI_County = SVI %>%
rowwise() %>%
group_by(YEAR, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU),
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
CEP_GROUPQ = CE_GROUPQ / CE_TOTPOP,
CEP_AGE17  = CE_AGE17 / CE_TOTPOP,
CEP_AGE65  = CE_AGE65 / CE_TOTPOP,
CEP_DISABL = CE_DISABL / CE_NOINST,
CEP_SNGPNT = CE_SNGPNT / CE_HH,
CEP_MINRTY = CE_MINRTY / CE_TOTPOP,
CEP_LIMENG = ifelse(is.na(CE_LIMENG / CE_AGE5), 0, CE_LIMENG / CE_AGE5)
)
SVI_County
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_POV    = percent_rank(CEP_POV),
CEPL_UNEMP  = percent_rank(CEP_UNEMP),
CEPL_PCI    = percent_rank(CEP_PCI),
CEPL_NOHSDP = percent_rank(CEP_NOHSDP),
CSPL_THEME1 = percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP),
CRPL_THEME1 = percent_rank(percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP)),
CEPL_AGE65  = percent_rank(CEP_AGE65),
CEPL_AGE17  = percent_rank(CEP_AGE17),
CEPL_DISABL = percent_rank(CEP_DISABL),
CEPL_SNGPNT = percent_rank(CEP_SNGPNT),
CSPL_THEME2 = percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT),
CRPL_THEME2 = percent_rank(percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT)),
CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
path = "C:/Users/taywo/Documents/Git Repos/CDC2021/datasets/Social Science/"
years = c(2014, 2016, 2018)
filenames = c("xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv",
"SVI2016_US.csv",
"SVI2018_US.csv")
#E_DISABL is missing from 2010, and some columns have different names
columns_2010 = c("YEAR", "STATE_NAME", "COUNTY", "CENSUSAREA", "E_TOTPOP",
"E_HU", "HH", "E_POV", "E_UNEMP", "E_PCI", "E_NOHSDIP", "AGE65",
"AGE17", "SNGPRNT", "MINORITY", "E_LIMENG", "E_MUNIT",
"E_MOBILE", "E_CROWD", "E_NOVEH", "GROUPQ")
columns = c("YEAR", "STATE", "COUNTY", "AREA_SQMI", 'E_TOTPOP',
'E_HU', 'E_HH', 'E_POV', 'E_UNEMP', 'E_PCI', 'E_NOHSDP', 'E_AGE65',
'E_AGE17', 'E_DISABL', 'E_SNGPNT', 'E_MINRTY', 'E_LIMENG', 'E_MUNIT',
'E_MOBILE', 'E_CROWD', 'E_NOVEH', 'E_GROUPQ',
'EP_NOHSDP', 'EP_UNEMP', 'EP_LIMENG', 'EP_DISABL', 'EP_CROWD', 'EP_NOVEH')
# for (i in 1:length(years)){
#   year = years[i]
#   filename = filenames[i]
#   SVI_new = read.csv(paste(path,filename,sep=""))
#   SVI_new$YEAR = year
#   if (i == 1){
#     SVI = SVI_new[columns]
#   } else {
#     SVI = rbind(SVI, SVI_new[columns])
#   }
# }
filename = "xn--CDCs_Social_Vulnerability_Index_(SVI)__2014_overall_SVI,_census_tract_level_-_Wake_County-7470duo.csv"
SVI_new = read.csv(paste(path,filename,sep=""))
SVI_new$YEAR = 2014
SVI = SVI_new[columns]
SVI
SVI$STATE = str_trim(toupper(SVI$STATE))
SVI$COUNTY = str_trim(toupper(SVI$COUNTY))
SVI$E_PCI[which(SVI$E_PCI == -999)] = NA
SVI$E_POV[which(SVI$E_POV == -999)] = NA
SVI$E_UNEMP[which(SVI$E_UNEMP == -999)] = NA
SVI[which(SVI$COUNTY == "MARICOPA" & SVI$E_LIMENG == 0),]
SVI = SVI %>%
mutate(E_AGE25 = ifelse(is.na(round(E_NOHSDP / (EP_NOHSDP/100))), 0, round(E_NOHSDP / (EP_NOHSDP/100))), #Number of people 25+
E_AGE16 = ifelse(is.na(round(E_UNEMP / (EP_UNEMP/100))), 0,  round(E_UNEMP / (EP_UNEMP/100))), #Number of people 16+
E_AGE5 = ifelse(is.na(round(E_LIMENG / (EP_LIMENG/100))), 0, round(E_LIMENG / (EP_LIMENG/100))), #Number of people 5+
E_NOINST = ifelse(is.na(round(E_DISABL / (EP_DISABL/100))), 0, round(E_DISABL / (EP_DISABL/100))), #Number of people not in an institution
E_OCCHU = ifelse(is.na(round(E_CROWD / (EP_CROWD/100))), 0, round(E_CROWD / (EP_CROWD/100))))  #Number of occupied housing units
SVI_County = SVI %>%
rowwise() %>%
group_by(YEAR, STATE, COUNTY) %>%
summarise(CE_TOTPOP    = sum(E_TOTPOP),
CE_AREA_SQMI = sum(AREA_SQMI),
CE_HU        = sum(E_HU),
CE_HH        = sum(E_HH),
CE_POV       = sum(E_POV),
CE_UNEMP     = sum(E_UNEMP),
CE_PCI       = round(sum(E_PCI * E_TOTPOP, na.rm = TRUE) / sum(E_TOTPOP, na.rm = TRUE)),
CE_NOHSDP    = sum(E_NOHSDP),
CE_MUNIT     = sum(E_MUNIT),
CE_MOBILE    = sum(E_MOBILE),
CE_CROWD     = sum(E_CROWD),
CE_NOVEH     = sum(E_NOVEH),
CE_GROUPQ    = sum(E_GROUPQ),
CE_AGE17     = sum(E_AGE17),
CE_AGE65     = sum(E_AGE65),
CE_DISABL    = sum(E_DISABL),
CE_SNGPNT    = sum(E_SNGPNT),
CE_MINRTY    = sum(E_MINRTY),
CE_LIMENG    = sum(E_LIMENG),
CE_AGE25     = sum(E_AGE25),
CE_AGE16     = sum(E_AGE16),
CE_AGE5      = sum(E_AGE5),
CE_NOINST    = sum(E_NOINST),
CE_OCCHU     = sum(E_OCCHU)
)
SVI_County
SVI_County = SVI_County %>%
mutate(CEP_POV    = CE_POV / CE_TOTPOP,
CEP_UNEMP  = CE_UNEMP / CE_AGE16,
CEP_PCI    = CE_PCI,
CEP_NOHSDP = CE_NOHSDP / CE_AGE25,
CEP_MUNIT  = CE_MUNIT / CE_HU,
CEP_MOBLIE = CE_MOBILE / CE_HH, #This is a guess
CEP_CROWD  = ifelse(is.na(CE_CROWD / CE_OCCHU), 0, CE_CROWD / CE_OCCHU),
CEP_NOVEH  = CE_NOVEH / CE_HH, #This is a guess
CEP_GROUPQ = CE_GROUPQ / CE_TOTPOP,
CEP_AGE17  = CE_AGE17 / CE_TOTPOP,
CEP_AGE65  = CE_AGE65 / CE_TOTPOP,
CEP_DISABL = CE_DISABL / CE_NOINST,
CEP_SNGPNT = CE_SNGPNT / CE_HH,
CEP_MINRTY = CE_MINRTY / CE_TOTPOP,
CEP_LIMENG = ifelse(is.na(CE_LIMENG / CE_AGE5), 0, CE_LIMENG / CE_AGE5)
)
SVI_County
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_POV    = percent_rank(CEP_POV),
CEPL_UNEMP  = percent_rank(CEP_UNEMP),
CEPL_PCI    = percent_rank(CEP_PCI),
CEPL_NOHSDP = percent_rank(CEP_NOHSDP),
CSPL_THEME1 = percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP),
CRPL_THEME1 = percent_rank(percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP)),
CEPL_AGE65  = percent_rank(CEP_AGE65),
CEPL_AGE17  = percent_rank(CEP_AGE17),
CEPL_DISABL = percent_rank(CEP_DISABL),
CEPL_SNGPNT = percent_rank(CEP_SNGPNT),
CSPL_THEME2 = percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT),
CRPL_THEME2 = percent_rank(percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT)),
CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County
SVI_County = SVI_County %>%
ungroup() %>%
mutate(CEPL_POV    = percent_rank(CEP_POV),
CEPL_UNEMP  = percent_rank(CEP_UNEMP),
CEPL_PCI    = percent_rank(CEP_PCI),
CEPL_NOHSDP = percent_rank(CEP_NOHSDP),
CSPL_THEME1 = percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP),
CRPL_THEME1 = percent_rank(percent_rank(CEP_POV) + percent_rank(CEP_UNEMP) + percent_rank(CEP_PCI) + percent_rank(CEP_NOHSDP)),
CEPL_AGE65  = percent_rank(CEP_AGE65),
CEPL_AGE17  = percent_rank(CEP_AGE17),
CEPL_DISABL = percent_rank(CEP_DISABL),
CEPL_SNGPNT = percent_rank(CEP_SNGPNT),
CSPL_THEME2 = percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT),
CRPL_THEME2 = percent_rank(percent_rank(CEP_AGE65) + percent_rank(CEP_AGE17) + percent_rank(CEP_DISABL) + percent_rank(CEP_SNGPNT)),
CEPL_MINRTY = percent_rank(CEP_MINRTY),
CEPL_LIMENG = percent_rank(CEP_LIMENG),
CSPL_THEME3 = percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG),
CRPL_THEME3 = percent_rank(percent_rank(CEP_MINRTY) + percent_rank(CEP_LIMENG)),
CEPL_MUNIT  = percent_rank(CEP_MUNIT),
CEPL_MOBILE = percent_rank(CEP_MOBLIE),
CEPL_CROWD  = percent_rank(CEP_CROWD),
CEPL_NOVEH  = percent_rank(CEP_NOVEH),
CEPL_GROUPQ = percent_rank(CEP_GROUPQ),
CSPL_THEME4 = percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ),
CRPL_THEME4 = percent_rank(percent_rank(CEP_MUNIT) + percent_rank(CEP_MOBLIE) + percent_rank(CEP_CROWD) + percent_rank(CEP_NOVEH) + percent_rank(CEP_GROUPQ)))
SVI_County = SVI_County %>%
mutate(CSPL_THEMES = CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4,
CRPL_THEMES = percent_rank(CRPL_THEME1 + CRPL_THEME2 + CRPL_THEME3 + CRPL_THEME4))
SVI_County
filename = "SVI_County.csv"
write.csv(SVI_County, paste(path,filename,sep=""))
covid_deaths = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_deaths_usafacts.csv")
covid_vaccine = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_deaths_usafacts.csv")
covid_infection = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_confirmed_usafacts.csv")
covid_deaths
covid_vaccine
covid_infection
change_county_name = function(county_name){
new_county_name = ifelse(str_detect(county_name, "County") == TRUE || str_detect(county_name, "county") == TRUE, substr(county_name, 1, nchar(county_name)-7), county_name)
return(new_county_name)
}
change_county_name = Vectorize(change_county_name)
covid_deaths$County.Name = change_count_name(covid_deaths$County.Name)
library(tidyverse)
library(lubridate)
covid_deaths_tall = gather(covid_deaths, date, deaths, colnames(covid_deaths)[5]:colnames(covid_deaths)[length(colnames(covid_deaths))], factor_key=F)
covid_vaccine_tall = gather(covid_vaccine, date, total_vaccines, colnames(covid_vaccine)[5]:colnames(covid_vaccine)[length(colnames(covid_vaccine))], factor_key=F)
covid_infection_tall = gather(covid_infection, date, total_infection, colnames(covid_infection)[5]:colnames(covid_infection)[length(colnames(covid_infection))], factor_key=F)
covid_deaths_tall = gather(covid_deaths, date, deaths, colnames(covid_deaths)[5]:colnames(covid_deaths)[length(colnames(covid_deaths))], factor_key=F)
covid_vaccine_tall = gather(covid_vaccine, date, total_vaccines, colnames(covid_vaccine)[5]:colnames(covid_vaccine)[length(colnames(covid_vaccine))], factor_key=F)
covid_infection_tall = gather(covid_infection, date, total_infection, colnames(covid_infection)[5]:colnames(covid_infection)[length(colnames(covid_infection))], factor_key=F)
covid_deaths_tall
covid_deaths_tall = gather(covid_deaths, date, deaths, colnames(covid_deaths)[5]:colnames(covid_deaths)[length(colnames(covid_deaths))], factor_key=F)
covid_vaccine_tall = gather(covid_vaccine, date, total_vaccines, colnames(covid_vaccine)[5]:colnames(covid_vaccine)[length(colnames(covid_vaccine))], factor_key=F)
covid_infection_tall = gather(covid_infection, date, total_infection, colnames(covid_infection)[5]:colnames(covid_infection)[length(colnames(covid_infection))], factor_key=F)
sum(covid_deaths_tall$deaths > 0)
covid_deaths_tall$date = ymd(str_remove_all(substr(covid_deaths_tall$date, 2, nchar(covid_deaths_tall$date)),"\\."))
covid_vaccine_tall$date = ymd(str_remove_all(substr(covid_vaccine_tall$date, 2, nchar(covid_vaccine_tall$date)), "\\."))
covid_infection_tall$date = ymd(str_remove_all(substr(covid_infection_tall$date, 2, nchar(covid_infection_tall$date)), "\\."))
?ymd
covid_deaths_tall$date = ymd(str_remove_all(substr(covid_deaths_tall$date, 2, nchar(covid_deaths_tall$date)),"\\."))
covid_vaccine_tall$date = ymd(str_remove_all(substr(covid_vaccine_tall$date, 2, nchar(covid_vaccine_tall$date)), "\\."))
covid_infection_tall$date = ymd(str_remove_all(substr(covid_infection_tall$date, 2, nchar(covid_infection_tall$date)), "\\."))
covid_deaths_tall
?ymd
covid_deaths_tall$date = ymd(str_remove_all(substr(covid_deaths_tall$date, 2, nchar(covid_deaths_tall$date)),"\\."))
covid_vaccine_tall$date = ymd(str_remove_all(substr(covid_vaccine_tall$date, 2, nchar(covid_vaccine_tall$date)), "\\."))
covid_infection_tall$date = ymd(str_remove_all(substr(covid_infection_tall$date, 2, nchar(covid_infection_tall$date)), "\\."))
covid_deaths_tall
ymd(covid_infection_tall$date[0])
covid_deaths_tall = gather(covid_deaths, date, deaths, colnames(covid_deaths)[5]:colnames(covid_deaths)[length(colnames(covid_deaths))], factor_key=F)
covid_vaccine_tall = gather(covid_vaccine, date, total_vaccines, colnames(covid_vaccine)[5]:colnames(covid_vaccine)[length(colnames(covid_vaccine))], factor_key=F)
covid_infection_tall = gather(covid_infection, date, total_infection, colnames(covid_infection)[5]:colnames(covid_infection)[length(colnames(covid_infection))], factor_key=F)
covid_deaths_tall
ymd(covid_deaths_tall$date[0])
ymd(substr(covid_deaths_tall$date[0], 2, length(covid_deaths_tall$date[0])))
substr(covid_deaths_tall$date[0], 2, length(covid_deaths_tall$date[0]))
?substr
substring(covid_deaths_tall$date[0], 2)
covid_deaths_tall$date[0]
covid_deaths_tall$date
substring(covid_deaths_tall$date[1], 2)
ymd(substring(covid_deaths_tall$date[1], 2))
covid_deaths_tall$date = ymd(substring(covid_deaths_tall$date, 2))
covid_vaccine_tall$date = ymd(substring(covid_vaccine_tall$date, 2))
covid_infection_tall$date = ymd(substring(covid_infection_tall$date, 2))
covid_deaths_tall
covid_deaths_tall$date = ymd(substring(covid_deaths_tall$date, 2))
covid_vaccine_tall$date = ymd(substring(covid_vaccine_tall$date, 2))
covid_infection_tall$date = ymd(substring(covid_infection_tall$date, 2))
covid_infection_tall
library(tidyverse)
library(lubridate)
covid_deaths = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_deaths_usafacts.csv")
covid_vaccine = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_deaths_usafacts.csv")
covid_infection = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_confirmed_usafacts.csv")
covid_deaths
covid_vaccine
covid_infection
# change_county_name = function(county_name){
#   new_county_name = ifelse(str_detect(county_name, "County") == TRUE || str_detect(county_name, "county") == TRUE, substr(county_name, 1, nchar(county_name)-7), county_name)
#   return(new_county_name)
# }
#
# change_county_name = Vectorize(change_county_name)
#
# covid_deaths$County.Name = change_count_name(covid_deaths$County.Name)
# covid_infection$County.Name = change_count_name(covid_infection$County.Name)
# covid_vaccine$County.Name = change_count_name(covid_vaccine$County.Name)
covid_deaths_tall = gather(covid_deaths, date, deaths, colnames(covid_deaths)[5]:colnames(covid_deaths)[length(colnames(covid_deaths))], factor_key=F)
covid_vaccine_tall = gather(covid_vaccine, date, total_vaccines, colnames(covid_vaccine)[5]:colnames(covid_vaccine)[length(colnames(covid_vaccine))], factor_key=F)
covid_infection_tall = gather(covid_infection, date, total_infection, colnames(covid_infection)[5]:colnames(covid_infection)[length(colnames(covid_infection))], factor_key=F)
covid_deaths_tall
library(tidyverse)
library(lubridate)
covid_deaths = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_deaths_usafacts.csv")
covid_vaccine = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_deaths_usafacts.csv")
covid_infection = read.csv("C:\\Users\\taywo\\Documents\\Git Repos\\CDC2021\\datasets\\Social Science\\covid_confirmed_usafacts.csv")
# change_county_name = function(county_name){
#   new_county_name = ifelse(str_detect(county_name, "County") == TRUE || str_detect(county_name, "county") == TRUE, substr(county_name, 1, nchar(county_name)-7), county_name)
#   return(new_county_name)
# }
#
# change_county_name = Vectorize(change_county_name)
#
# covid_deaths$County.Name = change_count_name(covid_deaths$County.Name)
# covid_infection$County.Name = change_count_name(covid_infection$County.Name)
# covid_vaccine$County.Name = change_count_name(covid_vaccine$County.Name)
covid_deaths_tall = gather(covid_deaths, date, deaths, colnames(covid_deaths)[5]:colnames(covid_deaths)[length(colnames(covid_deaths))], factor_key=F)
covid_vaccine_tall = gather(covid_vaccine, date, total_vaccines, colnames(covid_vaccine)[5]:colnames(covid_vaccine)[length(colnames(covid_vaccine))], factor_key=F)
covid_infection_tall = gather(covid_infection, date, total_infection, colnames(covid_infection)[5]:colnames(covid_infection)[length(colnames(covid_infection))], factor_key=F)
covid_deaths_tall
covid_deaths_tall$date = ymd(substring(covid_deaths_tall$date, 2))
covid_vaccine_tall$date = ymd(substring(covid_vaccine_tall$date, 2))
covid_infection_tall$date = ymd(substring(covid_infection_tall$date, 2))
covid_infection_tall
?inner_join
covid_infection_tall %>%
inner_join(covid_vaccine_tall, by = c("countyFIPS", "date")) %>%
inner_join(covid_deaths_tall, by = c("countyFIPS", "date"))
new_tall = covid_infection_tall %>%
inner_join(covid_vaccine_tall, by = c("countyFIPS", "date"))
new_tall = new_tall %>%
inner_join(covid_deaths_tall, by = c("countyFIPS", "date"))
new_tall
